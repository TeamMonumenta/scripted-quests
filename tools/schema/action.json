{
    "title": "Action",
    "type": "object",
    "additionalProperties": false,
    "properties": {
	    "quest_accept": {
			"title": "quest_accept",
			"description": "Accepts the quest that is specified by the quest ID, adding the Quest to the player's questbook, and starting the player at Stage 1 of the quest. This works if the player does not currently have this quest, and if the Prerequisite 'can_accept_quest' is true. (This prerequisite is ran automatically by this action). If the player successfully accepts this quest, the actions specified will be executed.",
			"type": "object",
			"properties": {
				"quest_id": {
					"title": "quest_id",
					"description": "The Quest ID that we are accepting.",
					"type": "string"
				},
				"actions": {
					"title": "actions",
					"description": "The actions taken whenever the quest is accepted.",
					"$ref": "actions.json"
				}
			}
		},
		
		"quest_progress": {
			"title": "quest_progress",
			"description": "Progresses the specified quest by changing the specified objectives that's in the specified stage numbers using the specified values. If all of the objectives for a stage is completed, it will automatically progress the player to the next stage of the quest, except if the player is already on the last stage of the quest.",
			"type": "object",
			"properties": {
				"quest_id": {
					"title": "quest_id",
					"description": "The Quest ID that we are progressing.",
					"type": "string"
				},
				"progress_changes": {
					"title": "progress_changes",
					"description": "The list of progress changes made to this quest.",
					"type": "array",
					"items": {
						"title": "Progress Change",
						"type": "object",
						"properties": {
							"stage": {
								"title": "stage",
								"description": "The numerical stage that is having its objectives being changed to. If the stage number is -1, then it will automatically default to whatever stage the player is currently on. If the stage number is invalid (out of range and NOT -1), then nothing will happen.",
								"type": "integer",
								"default": -1
							},
							"objective_id": {
								"title": "objective_id",
								"description": "The objective that we are changing, specified by the objective ID. If the objective ID is invalid, then nothing will happen.",
								"type": "string"
							},
							"objective_value": {
								"title": "objective_value",
								"description": "The new value that we are changing the objective to. Using + or - before the value will increment or decrement the value respectively. The value can only be between 0 and the maximum specified by the objective",
								"type": "string"
							}
						}
					}
				}
			}
		},
		"quest_reset_stage": {
			"title": "quest_reset_stage",
			"description": "Resets the specified stage for the specified quest, setting all quest objectives back to their default values. If the quest stage is -1, this will reset the stage that the player is currently on. If the quest stage is invalid (out of range AND not -1), nothing will happen.",
			"type": "object",
			"properties": {
				"quest_id": {
					"title": "quest_id",
					"description": "The Quest ID that we are resetting the stage for.",
					"type": "string"
				},
				"quest_stage": {
					"title": "quest_stage",
					"description": "The quest stage that we are resetting.",
					"type": "integer",
					"default": -1
				}
			}
		},
		"quest_complete": {
			"title": "quest_complete",
			"description": "Completes the quest that is specified by the quest ID, prompting a rewards screen which the player can receive their rewards from, and afterwards marking the quest as completed. For this, you can also specify additional actions to occur after the player completes the quest.",
			"type": "object",
			"properties": {
				"quest_id": {
					"title": "quest_id",
					"description": "The Quest ID that we are marking off as complete and using the rewards from.",
					"type": "string"
				},
				"actions": {
					"title": "actions",
					"description": "The actions taken whenever the quest is completed.",
					"$ref": "actions.json"
				}
			}
		},

		"prerequisites": {
			"title": "prerequisites",
            "description": "The prerequisites required for this action to run.",
            "$ref": "prerequisites.json"
        },
        "dialog": {
            "title": "dialog",
            "description": "Formatting supported with &amp; and ยง, and @S becomes the player's name",
            "type": "object",
            "defaultProperties": [
                "text"
            ],
            "properties": {
                "text": {
                    "title": "text",
                    "description": "Text spoken by NPC. '[Name] ' part is handled by the plugin",
                    "options": {
                        "keep_oneof_values": false
                    },
                    "oneOf": [
                        {
                            "title": "One line",
                            "type": "string"
                        },
                        {
                            "title": "Multiple lines",
                            "type": "array",
                            "minItems": 2,
                            "items": {
                                "title": "A line",
                                "type": "string"
                            }
                        }
                    ]
                },
                "raw_text": {
                    "title": "raw_text",
                    "description": "No name or formatting included by default",
                    "options": {
                        "keep_oneof_values": false
                    },
                    "oneOf": [
                        {
                            "title": "One line",
                            "type": "string"
                        },
                        {
                            "title": "Multiple lines",
                            "type": "array",
                            "minItems": 2,
                            "items": {
                                "title": "A line",
                                "type": "string"
                            }
                        }
                    ]
                },
                "clickable_text": {
                    "title": "clickable_text",
                    "description": "Colored, formatted, and put in [] for you.",
                    "type": "array",
                    "format": "tabs",
                    "minItems": 1,
                    "items": {
                        "headerTemplate": "{{self.player_text}}",
                        "type": "object",
                        "defaultProperties": [
                            "player_text",
                            "actions"
                        ],
                        "properties": {
                            "player_text": {
                                "required": true,
                                "propertyOrder": 1,
                                "title": "player_text",
                                "description": "Player's response",
                                "type": "string"
                            },
							"click_type": {
								"description": "The number state this is. This is mainly use to telegraph whether the NPC has a quest or not. 1 = Acceptable Quest, 2 = Turnin Quest",
								"title": "click_type",
								"type": "integer"
							},
							"quest_marker": {
								"description": "The Quest Marker that this Clickable Text Entry uses. Valid entries: MAIN_ACCEPT, MAIN_CONTINUE, MAIN_TURNIN, UNLOCK_ACCEPT, UNLOCK_CONTINUE, UNLOCK_TURNIN, WORLD_ACCEPT, WORLD_CONTINUE, WORLD_TURNIN",
								"title": "quest_marker",
								"type": "string",
								"default": "WORLD_ACCEPT"
							},
                            "delay_actions_by_ticks": {
                                "propertyOrder": 2,
                                "$ref": "delay_actions_by_ticks.json"
                            },
							"prerequisites": {
								"description": "The prerequisites required for the player to SEE this option. If they do not meet them, this text will not be shown.",
								"propertyOrder": 3,
								"$ref": "prerequisites.json"
							},
                            "actions": {
                                "required": true,
                                "propertyOrder": 4,
                                "$ref": "actions.json"
                            },
                            "player_valid_radius": {
                                "description": "Range that the player is allowed to walk from the point where they were shown the message and still have the dialog work. Default is 4.0.",
                                "required": false,
                                "propertyOrder": 5,
                                "type": "number",
                                "minimum": 3,
                                "maximum": 29999984
                            }
                        }
                    }
                },
                "random_text": {
                    "title": "random_text",
                    "type": "array",
                    "minItems": 2,
                    "items": {
                        "title": "A random line",
                        "type": "string"
                    }
                },
                "random_raw_text": {
                    "title": "random_raw_text",
                    "type": "array",
                    "minItems": 2,
                    "items": {
                        "title": "A raw random line",
                        "type": "string"
                    }
                },
				"scrolling_text": {
					"title": "scrolling_text",
					"type": "object",
					"defaultProperties": [
						"text",
						"actions"
					],
					"properties": {
						"text": {
							"title": "text",
							"description": "The text lines sent to the player",
							"type": "array",
							"minItems": 1,
							"items": {
								"title": "A NPC Dialogue line",
								"type": "string"
							}
						},
						"actions": {
							"title": "actions",
							"description": "The actions to perform whenever the dialog is finished",
							"$ref": "actions.json"
						},
						"click_type": {
							"title": "click_type",
							"description": "The number state this is. This is mainly use to telegraph whether the NPC has a quest or not. 1 = Acceptable Quest, 2 = Turnin Quest",
							"type": "integer"
						},
						"quest_marker": {
								"description": "The Quest Marker that this Scrollable Text Entry uses. Valid entries: MAIN_ACCEPT, MAIN_CONTINUE, MAIN_TURNIN, UNLOCK_ACCEPT, UNLOCK_CONTINUE, UNLOCK_TURNIN, WORLD_ACCEPT, WORLD_CONTINUE, WORLD_TURNIN",
								"title": "quest_marker",
								"type": "string",
								"default": "WORLD_ACCEPT"
						},
						"raw": {
							"title": "raw",
							"description": "Whether the text is raw or not, meaning it will not display the NPC name, and you have to do your own formatting.",
							"type": "boolean"
						},
						"autoScroll": {
							"title": "autoScroll",
							"description": "Whether the text will autoscroll, meaning the player does not have to click on the [>>>] Button if they choose not to. The text will scroll every 4.5s.",
							"type": "boolean"
						},
						"radius": {
							"description": "Range that the player is allowed to walk from the point where they were shown the message and still have the dialog work. Default is 4.0.",
							"required": false,
							"propertyOrder": 5,
							"type": "number",
							"minimum": 3,
							"maximum": 29999984
						}
					}
				}
            }
        },
        "set_scores": {
            "title": "set_scores",
            "description": "Set the player's specified scoreboard value(s). Click Properties, then type in the scoreboard name in the input box and click the 'add' button. Scoreboards are case-sensitive",
            "type": "object",
            "patternProperties": {
                ".*": {
                    "headerTemplate": "{{i}}",
                    "options": {
                        "keep_oneof_values": false
                    },
                    "oneOf": [
                        {
                            "title": "Exactly",
                            "$ref": "score.json"
                        },
                        {
                            "title": "Random",
                            "type": "object",
                            "properties": {
                                "min": {
                                    "title": "Minimum",
                                    "$ref": "score.json"
                                },
                                "max": {
                                    "title": "Maximum",
                                    "$ref": "score.json"
                                }
                            }
                        },
                        {
                            "title": "Copy from",
                            "type": "string"
                        }
                    ]
                }
            }
        },
		"set_shard_field": {
            "title": "set_shard_field",
            "description": "Set the shard's specified Shard Data values(s) that the player is currently in. Shard Data IDs are case-sensitive",
            "type": "array",
			"items": {
                "type": "object",
				"defaultProperties": [
					"shard_field_id",
					"shard_field_data"
				],
				"properties": {
				    "shard_field_id": {
						"title": "shard_field_id",
						"description": "The ID of the Shard Field",
						"type": "string"
					},
					"shard_field_data": {
						"title": "shard_field_data",
						"description": "Sets the Shard Data field for the Shard Data ID. Adding a + to the beginning will add to the score. Adding a - to the beginning will subtract from the score.",
						"type": "string"
					}
				}
            }
        },
		"set_shard_music": {
            "title": "set_shard_music",
            "description": "Sets the music being played in the Shard. The ID of the music is case-sensitive.",
            "type": "string"
        },
		"set_shard_objective": {
            "title": "set_shard_objective",
            "description": "Set the shard's specified Shard Objective values(s) that the player is currently in. Objective IDs are case-sensitive. The Objective will only be set if it's already defined in the Shard. Else, this will not do anything.",
            "type": "array",
			"items": {
                "type": "object",
				"defaultProperties": [
					"objective_id",
					"objective_data"
				],
				"properties": {
				    "objective_id": {
						"title": "objective_id",
						"description": "The ID of the Objective",
						"type": "string"
					},
					"objective_data": {
						"title": "objective_data",
						"description": "Sets the Shard Data field for the Objective ID. Adding a + to the beginning will add to the score. Adding a - to the beginning will subtract from the score.",
						"type": "string"
					}
				}
            }
        },
		"play_shard_title": {
            "title": "play_shard_title",
            "description": "Plays the Shard Title to the player with the specified fadeIn time, stay time, and fadeOut time.",
            "type": "object",
			"defaultProperties": [
				"fadeIn",
				"stay",
				"fadeOut"
			],
			"properties": {
				"fadeIn": {
					"title": "fadeIn",
					"description": "The time taken for the title to fade in. This is in ticks.",
					"type": "integer"
				},
				"stay": {
					"title": "stay",
					"description": "The amount of time that the title stays. This is in ticks.",
					"type": "integer"
				},
				"fadeOut": {
					"title": "fadeOut",
					"description": "The time taken fro the title to fade out. This is in ticks.",
					"type": "integer"
				}
			}
        },
		"set_questdata": {
            "title": "set_questdata",
            "description": "Set the player's specified Quest Data values(s). Click Properties, then type in the Quest Data ID in the input box and click the 'add' button. Quest Data IDs are case-sensitive",
            "type": "array",
			"items": {
                "type": "object",
				"defaultProperties": [
					"quest_id",
					"quest_data_fields"
				],
				"properties": {
				    "quest_id": {
						"title": "Quest ID",
						"description": "The ID of the questdata",
						"type": "string"
					},
					"completed": {
						"title": "completed",
						"description": "Set this quest to be completed or not",
						"type": "boolean"
					},
					"quest_data_fields": {
					    "type": "object",
						"patternProperties": {
							".*": {
								"headerTemplate": "{{i}}",
								"description": "Sets the Quest Data field for the Quest Data ID. Adding a + to the beginning will add to the score. Adding a - to the beginning will subtract from the score.",
								"type": "string",
								"default": "0"
							}
						}
					}
				}
            }
        },
		"remove_questdata": {
            "title": "remove_questdata",
            "description": "Removes the QuestData for the player.",
            "type": "string"
        },
		"trade": {
            "title": "trade",
            "description": "Opens an RPG Trade for the player to use.",
            "type": "string"
        },
	    "timer_cooldown": {
            "title": "timer_cooldown",
            "description": "Puts the player on cooldown with the specified timer and timer tags. This will cause the pre-requisite 'timer_cooldown' to return true.",
			"properties": {
				"timer_id": {
					"title": "Timer ID",
					"description": "The ID of the Timer",
					"type": "string"
				},
				"timer_tags": {
					"title": "timer_tags",
					"description": "Gives the player the specified timer tags. These timer tags are assigned to this specific timer, and the tags will clear once the timer resets.",
					"type": "array",
					"items": {
						"title": "Timer Tag",
						"type": "string"
					}
				}
			},
            "type": "object"
        },
	    "timer_reset": {
            "title": "timer_reset",
            "description": "Removes the player from the timer cooldown. This will cause the pre-requisite 'timer_cooldown' to return false.",
            "type": "string"
        },
		"menu": {
            "title": "menu",
            "description": "Opens a Menu for the player to use. Valid arguments: reforges.",
            "type": "string"
        },
		"open_altar": {
            "title": "open_altar",
            "description": "Opens an Enchantment Altar for the player to use. Use the ID",
            "type": "string"
        },
		"open_profession": {
            "title": "open_profession",
            "description": "Opens a player's Profession Menu for a specific profession",
			"properties": {
				"professionType": {
					"title": "professionType",
					"description": "The profession type to open. Valid IDs: BLACKSMITH, ARTISAN, ALCHEMY, COOKING, JEWELER, HERBALISM, MINING, FISHING, SKINNING",
					"type": "string",
					"default": "BLACKSMITH"
				},
				"location": {
					"title": "location",
					"description": "The Location of the profession workstation. Format is world,x,y,z",
					"type": "string",
					"default": "world,0,0,0"
				}
			}
        },
		"learn_profession": {
            "title": "learn_profession",
			"description": "Opens the menu for a player to learn the specified profession. This will not open if they have 2 Professions already. Valid IDs: BLACKSMITH, ARTISAN, ALCHEMY, COOKING, JEWELER, HERBALISM, MINING, FISHING, SKINNING",
            "type": "string"
        },
        "function": {
            "title": "function",
            "description": "Runs a function via the console as the player (/execute as <playername> at @s run function <function>)",
            "type": "string"
        },
        "command": {
            "title": "command",
            "description": "Runs a command via the console. Any instance of '@S' (uppercase!) will be replaced with the player's name. Any instance of '@N' (uppercase!) will be replaced with the NPC's UUID, which can be used like @e to target a specific entity. The NPC must be selected by trading or punching to use the entity UUID, or the player will receive an error instead.",
            "type": "string"
        },
		"command_world": {
            "title": "command_world",
            "description": "Runs a command via the console. This is different from the 'command' action, as it runs the command in the player's WORLD (It will add '/execute in <world> run' at the beginning automatically, with <world> being the player's current world). Any instance of '@S' (uppercase!) will be replaced with the player's name. Any instance of '@N' (uppercase!) will be replaced with the NPC's UUID, which can be used like @e to target a specific entity. The NPC must be selected by trading or punching to use the entity UUID, or the player will receive an error instead.",
            "type": "string"
        },
		"run_actions": {
            "title": "run_actions",
            "description": "Runs the specified SpellActions on the player or NPC.",
            "type": "object",
			"properties": {
				"on_player": {
					"title": "on_player",
					"description": "Whether these actions occur on the player or not",
					"type": "boolean"
				},
				"y_offset": {
					"title": "y_offset",
					"description": "The y-offset for the location value for the actions",
					"type": "number",
					"default": 0
				},
				"spell_actions": {
					"title": "spell_actions",
					"description": "The actions to run",
					"$ref": "ability_actions.json"
				}
			}
        },
        "give_loot": {
            "title": "give_loot",
            "description": "Gives the player all items from a loot table.",
            "type": "string"
        },
		"give_ability": {
            "title": "give_ability",
            "description": "Gives the player the specified ability. This only works if the ability is able to be given. Talk to a Developer to ask which abilities are givable.",
            "type": "string"
        },
		"give_handbook_entry": {
            "title": "give_handbook_entry",
            "description": "Gives the player the specified Handbook Entry to add to their Player Handbook. If the player already has the handbook entry, this will not do anything.",
            "type": "string"
        },
		"give_handbook_entries": {
            "title": "give_handbook_entries",
            "description": "Gives the player the specified Handbook Entries to add to their Player Handbook. If the player already has the handbook entries, this will not do anything. USE THIS WHEN ADDING MULTIPLE ENTRIES",
            "type": "array",
			"items": {
			    "title": "handbook entry id",
				"type": "string"
			}
        },
		"give_reward": {
            "title": "give_reward",
            "description": "Rewards the player all of the items from given loot tables in a stylized UI.",
            "type": "object",
			"defaultProperties": [
				"base_reward",
				"pick_reward",
				"xp",
				"coins",
				"quest_components"
			],
			"properties": {
				"base_reward": {
					"title": "base_reward",
					"description": "The rewards that are given to the player as the base.",
                    "oneOf": [
                        {
                            "title": "Loot Table",
                            "type": "string"
                        },
                        {
                            "title": "RPG Item IDs",
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "title": "RPG Item",
                                "type": "string"
                            }
                        }
                    ]
				},
				"pick_reward": {
					"title": "pick_reward",
					"description": "The loot from which the player has to pick 1 item from. This can be left blank if not intended.",
                    "oneOf": [
                        {
                            "title": "Loot Table",
                            "type": "string"
                        },
                        {
                            "title": "RPG Item IDs",
							"type": "array",
							"items": {
								"title": "RPG Item",
								"type": "object",
								"properties": {
									"id": {
										"title": "id",
										"description": "The RPG Item ID of the item",
										"type": "string"
									},
									"amount": {
										"title": "amount",
										"description": "The amount of the item to give",
										"type": "integer"
									}
								}
							}
                        }
                    ]
				},
				"xp": {
					"title": "xp",
					"description": "The amount of experience given to the player.",
					"type": "integer",
					"default": 0
				},
				"xp_percent": {
					"title": "xp_percent",
					"description": "Gives XP based on the parameters given using MATHS. The amount of XP it gives correlates to the specified player level and the percentage of XP for the next level after",
					"properties": {
						"level": {
							"title": "level",
							"description": "The level to base the XP given off of.",
							"type": "integer"
						},
						"xp_percent": {
							"title": "xp_percent",
							"description": "The percentage of XP to give according to the amount of XP needed to get the player from <level> to <level + 1>. This is a decimal from 0 - 1",
							"$ref": "xp_range.json"
						}
					}
				},
				"coins": {
					"title": "coins",
					"description": "The amount of coins given to the player.",
					"type": "integer",
					"default": 0
				},
				"quest_components": {
					"title": "quest_components",
					"description": "The quest components to run whenever the player accepts the rewards",
					"type": "array",
					"format": "tabs",
					"items": {
						"title": "Quest Component",
						"$ref": "quest_component.json"
					}
				}
			}
        },
		"give_xp": {
            "title": "give_xp",
            "description": "Gives the player the amount of XP specified.",
            "type": "integer"
        },
		"give_xp_percent": {
			"title": "give_xp_percent",
			"description": "Gives XP based on the parameters given using MATHS. The amount of XP it gives correlates to the specified player level and the percentage of XP for the next level after",
			"properties": {
				"level": {
					"title": "level",
					"description": "The level to base the XP given off of.",
					"type": "integer"
				},
				"xp_percent": {
					"title": "xp_percent",
					"description": "The percentage of XP to give according to the amount of XP needed to get the player from <level> to <level + 1>. This is a decimal from 0 - 1",
					"$ref": "xp_range.json"
				}
			}
		},
        "interact_npc": {
            "title": "interact_npc",
            "description": "Triggers a follow-on interaction with a different NPC.",
            "type": "object",
            "defaultProperties": [
                "name"
            ],
            "properties": {
                "name": {
                    "title": "name",
                    "description": "Name of the NPC to have the player interact with.",
                    "type": "string"
                },
                "entity_type": {
                    "title": "entity_type",
                    "description": "EntityType of the NPC to have the player interact with (default is VILLAGER).",
                    "type": "string"
                }
            }
        },
        "rerun_components": {
            "title": "rerun_components",
            "description": "Re-runs all quest components tied to this specific NPC (including those specified in other files). To prevent infinite loops, this action will not run itself, even if conditions indicate it should.",
            "type": "null"
        },
		"drop_loot": {
            "title": "drop_loot",
            "description": "Drops all items for a player on a Quest NPC. If there is no Quest NPC, it defaults to the player instead.",
            "oneOf": [
				{
					"title": "Loot Table",
					"type": "string"
				},
				{
					"title": "Items List",
					"type": "array",
					"items": {
						"title": "RPG Item",
						"type": "object",
						"properties": {
							"id": {
								"title": "id",
								"description": "The RPG Item ID of the item",
								"type": "string"
							},
							"amount": {
								"title": "amount",
								"description": "The amount of the item to give",
								"type": "integer"
							}
						}
					}
				}
			]
        },
		"spawn_mob": {
            "title": "spawn_mob",
            "description": "Spawns mobs at the given locations",
			"type": "array",
			"items": {
			    "type": "object",
				"properties": {
					"mob_id": {
						"title": "mob_id",
						"description": "The id of the mob to spawn",
						"type": "string"
					},
					"world": {
						"title": "world",
						"description": "The world that the mob will spawn in. Leave blank to use the world of the player receiving the quest component.",
						"type": "string"
					},
					"location": {
						"title": "location",
						"description": "The location to spawn",
						"$ref": "xyz.json"
					},
					"spell_actions": {
						"title": "spell_actions",
						"description": "The actions to run when the mob spawns",
						"$ref": "ability_actions.json"
					}
				}
            }
        },
		"enter_shard": {
            "title": "enter_shard",
            "description": "Creates and teleports the player into a Shard Instance given the Shard ID",
            "type": "string"
        },
		"leave_shard": {
            "title": "leave_shard",
            "description": "Leaves the current shard that the player is in. Leave as 'false' if the player 'exits' the shard, or true if the player 'abandons' the shard.",
            "type": "boolean",
			"default": false
        },
		"teleport": {
            "title": "teleport",
            "description": "Teleports the player to a specific world, location, and rotation. Only use this if you need to teleport a player across worlds. Format: world,x,y,z,yaw,pitch",
            "type": "string"
        },
		"play_cutscene": {
            "title": "play_cutscene",
            "description": "Plays a cutscene at the specified origin location, which at the end of the cutscene (or by skipping it) will perform the specified Quest Components.",
            "type": "object",
			"defaultProperties": [
				"cutscene_id",
				"position",
				"quest_components"
			],
			"properties": {
				"cutscene_id": {
					"title": "cutscene_id",
					"description": "The ID of the Cutscene.",
					"type": "string"
				},
				"position": {
					"title": "position",
					"description": "The string format of the position in the world to play the cutscene at. Use format x,y,z and integers only!",
					"type": "string"
				},
				"quest_components": {
					"title": "quest_components",
					"description": "The quest components to run whenever the player finishes or skips the cutscene.",
					"type": "array",
					"format": "tabs",
					"items": {
						"title": "Quest Component",
						"$ref": "quest_component.json"
					}
				},
				"end_frame": {
					"title": "end_frame",
					"description": "The frame that the cutscene to end on.",
					"type": "integer"
				}
			}
        }
    }
}
